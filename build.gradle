plugins {
    id 'java'
    id 'maven'
}

group 'com.jfrog.ide'

sourceCompatibility = 1.8

repositories {
    mavenLocal()
    maven {
        url "https://releases.jfrog.io/artifactory/oss-releases"
    }
    maven {
        url "https://releases.jfrog.io/artifactory/oss-snapshots"
    }
    maven{
        url 'http://maven.aliyun.com/nexus/content/groups/public/'
    }
}

dependencies {
    compile ('org.jfrog.buildinfo:build-info-extractor-go:2.16.1'){
        exclude module: "build-info-extractor"
    }
    compile ('org.jfrog.buildinfo:build-info-extractor-npm:2.16.1'){
        exclude module: "build-info-extractor"
    }
    compile group: 'org.jfrog.buildinfo', name: 'build-info-api', version: '2.16.1'
    compile group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.10.1'
//    compile group: 'com.jfrog.xray.client', name: 'xray-client-java', version: '0.5.0'
    compile files("lib/build-info-extractor-2.16.1.jar")
    compile group: 'org.jfrog.common', name: 'jfrog-http-client', version: '3.8.0'
    compile group: 'org.apache.commons', name: 'commons-collections4', version: '4.4'
    compile group: 'org.apache.commons', name: 'commons-lang3', version: '3.9'
    compile group: 'com.google.guava', name: 'guava', version: '28.1-jre'
    compileOnly group: 'org.projectlombok', name: 'lombok', version: '1.18.10'
    testCompile group: 'org.testng', name: 'testng', version: '6.14.3'
    annotationProcessor group: 'org.projectlombok', name: 'lombok', version: '1.18.10'
}

task uberJar(type: Jar) {
    archiveClassifier.set('uber')
    manifest {
        attributes 'Implementation-Version': version
    }

    from {
        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    }
    exclude 'META-INF/*.RSA', 'META-INF/*.SF','META-INF/*.DSA'
    with jar
}

jar {
    manifest {
        attributes 'Implementation-Version': version
    }
}

//noinspection GroovyAssignabilityCheck
task sourcesJar(type: Jar, dependsOn: classes) {
    archiveClassifier.set('sources')
    from sourceSets.main.allSource
}

test {
    useTestNG() {
        useDefaultListeners = true
    }
    testLogging {
        exceptionFormat "full"
        events "started", "passed", "skipped", "failed", "standardOut", "standardError"
        minGranularity 0
    }
}

artifacts {
    archives sourcesJar
    archives uberJar
}

